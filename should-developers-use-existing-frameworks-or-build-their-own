Topic: Should developers use existing frameworks or build their own? 
Answer: In a world where you were not constrained by time, budget or scope (i.e. the “Triple Constraint”), it would make sense for capable and talented developers to always write their own code and build their own frameworks. But, that is not the world we live in. As managers, we are usually constrained by all three of the parameters mentioned above, and as such we must manage developers accordingly. This usually means steering developers away from the romantic notion of building their own frameworks, and getting them to accept the practice of using existing frameworks. This practice is sometimes referred to as “software reuse,” or is at least one type of software reuse. But to push them in that direction, you should have a clear idea of why you’re doing so. Below I’ll discuss some of the key benefits of using existing frameworks instead of building one from scratch.
It saves time: writing code takes time. Building a framework from scratch can often take a LOT of time. But by using existing frameworks – pre-written code, essentially – developers should be able to move much faster and work much more efficiently.
It’s reliable: a developer may have unwavering confidence that they can build what you need. And maybe they can. But there’s a good chance they can’t, or that it won’t be nearly as easy or as quick as they first thought. Existing frameworks are what they are – you know what you’re getting. And they’re reliable. It’s high-quality turnkey work. 
It helps focus: if you’re building a product that just needs some basic functionality, but whose real value lies in distinct capabilities, your team should probably spend the lion’s share of their time on the value prop portion. And using existing frameworks for the more basic stuff decreases the possibility of distraction, which in turn should increase focus on the most important parts of the task at hand. 
Link: http://lombardhill.com/articles/software-reuse-101-what-is-software-reuse/
![alt text] (http://www.kongwing.com/wp-content/uploads/2014/02/Dont-reinvent-the-wheel.jpg)
